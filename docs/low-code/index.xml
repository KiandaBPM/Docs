<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kianda no-code platform for business process automation – What is Low-Code Development?</title><link>https://docs.kianda.com/docs/low-code/</link><description>Recent content in What is Low-Code Development? on Kianda no-code platform for business process automation</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.kianda.com/docs/low-code/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Application design principles</title><link>https://docs.kianda.com/docs/low-code/application-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/low-code/application-design/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Page under construction&lt;/p>
&lt;/div></description></item><item><title>Docs: Progressive Web Application (PWA)</title><link>https://docs.kianda.com/docs/low-code/pwa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/low-code/pwa/</guid><description>
&lt;p>Progressive web applications are the next great trend for the mobile web.&lt;/p>
&lt;p>Kianda is a progressive web application. This means with Kianda you get a digital experience that is native-like while maintaining online web benefits.&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>Access your digital workspace PWA by going to https://&amp;lt;businessName&amp;gt;.kianda.com&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;p>There are several benefits of using a PWA app when comparing to a web app or even a native only app.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Reliable&lt;/strong> - Apps keep working with or without network access. Even when your users are going through a tunnel or in a lift, changes are automatically queued offline and then synchronised when connectivity is restored.&lt;/li>
&lt;li>&lt;strong>Fast&lt;/strong> - App loads quickly thanks to having the app installed locally, app resources are available offline.&lt;/li>
&lt;li>&lt;strong>Engaging&lt;/strong> - When installing on your home screen with your brand icons users receive timely push notifications that help them stay engaged.&lt;/li>
&lt;/ul>
&lt;h2 id="installing-your-pwa-on-a-mobile">Installing your PWA on a mobile&lt;/h2>
&lt;p>There are a few options to install your Kianda PWA workspace into mobile devices. The quickest is to let your users manually use the option &amp;ldquo;Add to home screen&amp;rdquo; in their mobile devices.&lt;/p>
&lt;h3 id="android">Android&lt;/h3>
&lt;p>Android users are automatically prompted to install the PWA when they navigate to your digital workspace URL. Then can quickly choose to install by clicking the install banner prompt.&lt;/p>
&lt;p>Optionally users can manually install it by following the steps:&lt;/p>
&lt;ol>
&lt;li>Navigate to https://&amp;lt;businessName&amp;gt;.kianda.com.&lt;/li>
&lt;li>Click&lt;img src="images/android-nav.png" alt="1567866702202">then tap on &amp;ldquo;Add to Home screen&amp;rdquo;.&lt;/li>
&lt;li>On the confirm dialog tap &amp;ldquo;Add&amp;rdquo;.&lt;/li>
&lt;/ol>
&lt;h3 id="ios">iOS&lt;/h3>
&lt;p>iOS users are not yet automatically prompted to install PWA&amp;rsquo;s but it is something that can also very quickly be done by iOS users.&lt;/p>
&lt;ol>
&lt;li>Navigate to https://&amp;lt;businessName&amp;gt;.kianda.com.&lt;/li>
&lt;li>Tap the action button&lt;img src="images/ios-action.png" alt="1567867653481">then tap &amp;ldquo;Add to Home screen&amp;rdquo;.&lt;/li>
&lt;li>On the &amp;ldquo;Add to Home Screen&amp;rdquo; tap &amp;ldquo;Add&amp;rdquo;.&lt;/li>
&lt;/ol>
&lt;h2 id="offline-or-online">Offline or online&lt;/h2>
&lt;p>As we know in some cases, when there is no internet connection, websites are completely constrained to be shown appropriately. On the other hand, progressive web applications are regularly independent, enabling users to browse the app when not online, this increases engagement and availability greatly. With an offline mode, any information can be saved automatically during the last online access.&lt;/p>
&lt;p>Emphasize benefits to potential clients who are frequently operating in remote areas with no access to the internet.&lt;/p>
&lt;h2 id="performance">Performance&lt;/h2>
&lt;p>Progressive web apps are faster because of the way the underlying technology caches and serves text, stylesheets, images and other content on the websites. As a result user experience, consistency and conversion rate increase.&lt;/p>
&lt;p>Progressive web apps utilize service workers, which are JavaScript files that run independently from the main browser thread and efficiently control caching, this is how progressive web apps enhance better performance than traditional web apps.&lt;/p></description></item><item><title>Docs: Why choose low-code development?</title><link>https://docs.kianda.com/docs/low-code/why-choose-lowcode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/low-code/why-choose-lowcode/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Kianda’s low code development environment provides developers with a graphical user interface to quickly create customised applications that can be used in automated processes.&lt;/p>
&lt;p>Kianda Developer can be utilised to implement HTTP requests and &lt;a href="https://docs.kianda.com/docs/apis/">API&lt;/a> calls to allow for real-time data interactions. To learn more about low-code development, see &lt;a href="https://docs.kianda.com/docs/getting-started/welcome/low-code/">What is Low-Code Development?&lt;/a>.&lt;/p>
&lt;h2 id="why-choose-low-code-development">Why choose low-code development?&lt;/h2>
&lt;p>Providing you have some software development and/or coding knowledge, low-code development can allow you to implement customised Kianda widgets to meet user-specific needs such as creating custom ‘Field’, ‘Rule’ or ‘Dashboard widget’ elements.&lt;/p>
&lt;p>There are 16 predefined fields and 60 rules available for non-developers to use in a no-code form design GUI. However if these do not suit, then Kianda’s low-code development solution provides near limitless room for process expansion. As the Kianda platform offers access to any data source (including real-time synchronisation of the data) and integration with many other software tools and applications, the implementation of low-code can provide your business processes with extreme scalability and room for improvement.&lt;/p>
&lt;p>You can also build upon pre-defined field, rule and dashboard code to offer the developer a shortcut in creating something new and beneficial for the organisation. For example, you can see a rule widget user interface being designed below, using HTML, handlers, expressions and more.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/rulewidgetui150.PNG" alt="Rule widget UI">&lt;/p>
&lt;h2 id="how-to-implement-low-code-development">How to implement low-code development&lt;/h2>
&lt;p>If you are an experienced developer with an &lt;strong>Administrator&lt;/strong> or &lt;strong>Developer&lt;/strong> role (see &lt;a href="https://docs.kianda.com/docs/platform/administration/users/">Users &amp;amp; Groups&lt;/a>), you can create a new custom widget within Kianda by doing the following:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Navigate to &lt;strong>Administration &amp;gt; Developer &amp;gt; New widget&lt;/strong> to begin creating a new custom widget.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Under &lt;strong>Edit widget&lt;/strong>, you must fill out the following:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Title&lt;/strong> – the name of your new custom widget&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Unique Id&lt;/strong> – the unique identifier used within the code to refer to this widget. It should be noted that this field is filled out automatically based on the entered Title, however it can be edited.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Widget Icon&lt;/strong> – the icon image that the custom widget will be associated with&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Widget type&lt;/strong> – choose from &lt;strong>Field&lt;/strong>, &lt;strong>Rule&lt;/strong>, and &lt;strong>Dashboard Widget&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/dashboard-widget-holiday.jpg" alt="Edit widget screen">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>From here, you can select:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Widget UI&lt;/strong> – a coding environment that allows you to define HTML handlers, expressions and more.&lt;/li>
&lt;li>&lt;strong>Widget Code&lt;/strong> – a coding environment that allows you to define the logic and functions behind the custom widget.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>When you are complete, click on the &lt;strong>OK&lt;/strong> button &lt;img src="https://docs.kianda.com/images/ok.png" alt="update button"> to save the changes made. The newly created custom widget can be displayed in the view widget pane. You can use the &lt;strong>version history&lt;/strong> button &lt;img src="https://docs.kianda.com/images/version-history-btn.jpg" alt="version history button">, &lt;strong>edit&lt;/strong> button &lt;img src="https://docs.kianda.com/images/edit_orig.png" alt="edit button"> and &lt;strong>delete&lt;/strong> button &lt;img src="https://docs.kianda.com/images/delete-btn.jpg" alt="delete button"> to visualise and perform any necessary changes.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Depending on the type of newly created custom widget, they can be accessed by:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Field widget&lt;/strong> - navigate to &lt;strong>Administration &amp;gt; Designer &amp;gt; &lt;em>Your Process&lt;/em> &amp;gt; Controls.&lt;/strong> Under &lt;strong>Custom&lt;/strong>, your field widget will be displayed and is now ready for use. To learn more about field widgets, see &lt;a href="https://docs.kianda.com/docs/low-code/field-widget/">Custom form control development&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Rule widget&lt;/strong> - navigate to &lt;strong>Administration &amp;gt; Designer &amp;gt; &lt;em>Your Process&lt;/em> &amp;gt; Add a rule.&lt;/strong> Under &lt;strong>Custom&lt;/strong>, your rule widget will be displayed and is now ready for use. To learn more about rule widgets, see &lt;a href="https://docs.kianda.com/docs/low-code/rule-widget/">Custom rule widget development&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Dashboard widget&lt;/strong> - navigate to &lt;strong>Dashboard &amp;gt; &lt;em>Your Dashboard&lt;/em> &amp;gt; Edit current page&lt;/strong> button &lt;img src="https://docs.kianda.com/images/editpage.PNG" alt="edit current page button">. From there, you click the drop-down list button and you will have access to the created custom dashboard widgets. To learn more about dashboard widgets, see &lt;a href="https://docs.kianda.com/docs/low-code/dashboard-widget/">Custom dashboard widget development&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="whats-next-idea-iconimages18png">What&amp;rsquo;s next &lt;img src="https://docs.kianda.com/images/18.png" alt="Idea icon">&lt;/h2>
&lt;p>To continue with low-code development, you can view &lt;a href="https://docs.kianda.com/docs/low-code/templating-basics/">Templating basics&lt;/a>. If you would like to learn more about ‘no-code versus low-code’ in general, see &lt;a href="https://docs.kianda.com/docs/getting-started/welcome/no-code/">What is no-code?&lt;/a> and &lt;a href="https://docs.kianda.com/docs/getting-started/welcome/low-code/">What is low-code?&lt;/a>.&lt;/p></description></item><item><title>Docs: Templating basics</title><link>https://docs.kianda.com/docs/low-code/templating-basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/low-code/templating-basics/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Page under construction&lt;/p>
&lt;/div></description></item><item><title>Docs: Low-code customisation options for the list widget</title><link>https://docs.kianda.com/docs/low-code/list-widget-template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/low-code/list-widget-template/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Page under construction&lt;/p>
&lt;/div></description></item><item><title>Docs: Javascript expressions</title><link>https://docs.kianda.com/docs/low-code/javascript-expressions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/low-code/javascript-expressions/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Page under construction&lt;/p>
&lt;/div></description></item><item><title>Docs: Global CSS file</title><link>https://docs.kianda.com/docs/low-code/global-css/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/low-code/global-css/</guid><description>
&lt;p>Within Kianda there is standard site-wide Cascading Style Sheets (CSS) that forms the default styling on the whole site. However as a workspace &lt;strong>Administrator&lt;/strong> you can add a &lt;strong>Global CSS File&lt;/strong> to make changes to the look and feel of the site as well as processes. The &lt;strong>Global CSS file editor&lt;/strong> exists within the &lt;strong>Look and Feel&lt;/strong> section of the Subscription, within the &lt;strong>Administration&lt;/strong> section of the site, see &lt;a href="https://docs.kianda.com/docs/platform/administration/subscription/">Subscription&lt;/a> for an introduction to the &lt;strong>Subscription&lt;/strong> function.&lt;/p>
&lt;h2 id="when-to-use">When to use&lt;/h2>
&lt;p>Remember the visual style of processes and individual controls like buttons, can be heavily customised using Kianda &lt;a href="https://docs.kianda.com/docs/platform/application-designer/designer/">&lt;strong>Designer&lt;/strong>&lt;/a> to achieve a unique look that is both appealing to the eye and practical. Many of these changes can be achieved simply by using the provided customisation controls within &lt;strong>Designer&lt;/strong>, for example selecting a button, and clicking on the &lt;strong>Edit/pen&lt;/strong> icon to make changes.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/button-example.jpg" alt="Selected button example">&lt;/p>
&lt;p>Selecting the button in this way to edit it, will allow you to select the colour scheme of the control and assign an icon to it from a large library of available icons.&lt;/p>
&lt;p>However, you may want to achieve a &lt;strong>deeper level of customisation&lt;/strong>. There are several methods available to combine practicality and ease of user with an aesthetically pleasing design. One option is to modify the &lt;strong>Global CSS File&lt;/strong> when you want to change the look and feel of the &lt;strong>site or your processes&lt;/strong>. You can do this by selecting individual fields in the &lt;strong>process&lt;/strong> via the unique name or can change entire elements by selecting their element name or a selector. Once items are added to the file they will be available globally in the &lt;strong>Subscription&lt;/strong> function within &lt;strong>Administration&lt;/strong>.&lt;/p>
&lt;h2 id="before-you-get-started">Before you get started&lt;/h2>
&lt;p>The key to building functional and aesthetically pleasing workspaces and processes within Kianda is to &lt;strong>plan ahead&lt;/strong> and create a design in advance that you can then use as your vision and mould your process or workspace into. &lt;strong>Design&lt;/strong> &lt;strong>tools&lt;/strong> can be used to create &lt;strong>visual&lt;/strong> &lt;strong>mock&lt;/strong>-&lt;strong>ups&lt;/strong> of the processes and workspaces you would like to create, for example the mock-up below was created using &lt;strong>Adobe&lt;/strong> &lt;strong>XD&lt;/strong>.&lt;/p>
&lt;img src="https://docs.kianda.com/images/mock-up-design.jpg" alt="Mock-up design example" style="zoom:80%;" />
&lt;p>Bootstrap has released a &lt;strong>library&lt;/strong> that can be imported into Adobe XD that allows you to create designs using &lt;strong>bootstrap&lt;/strong> &lt;strong>elements&lt;/strong>. This allows you to see all of the &lt;strong>available&lt;/strong> &lt;strong>components&lt;/strong> you have to create your processes and workspaces, and then create &lt;strong>visually&lt;/strong> &lt;strong>pleasing&lt;/strong> and &lt;strong>functional&lt;/strong> &lt;strong>designs&lt;/strong> using these elements.&lt;/p>
&lt;p>The &lt;strong>mock&lt;/strong>-&lt;strong>up&lt;/strong> was then used as a plan to &lt;strong>create&lt;/strong> &lt;strong>this&lt;/strong> &lt;strong>process&lt;/strong>. You don’t have to create processes or workspaces exactly the same as the mock-ups to create during the &lt;strong>planning&lt;/strong> &lt;strong>stage&lt;/strong>, but they act as a great &lt;strong>reference&lt;/strong> and allow you to have a &lt;strong>solid&lt;/strong> &lt;strong>foundation&lt;/strong> to build off of whilst still being able to &lt;strong>deviate&lt;/strong> from the &lt;strong>design&lt;/strong> when the need arises. Go to &lt;a href="https://docs.kianda.com/docs/getting-started/create-first-process/">Create your first Kianda process&lt;/a> for advice and tips on planning processes. To help you in planning your CSS design, see the sections below.&lt;/p>
&lt;h3 id="effective-use-of-css-classes">Effective use of CSS classes&lt;/h3>
&lt;p>Although you may be familiar with the concept of using &lt;strong>CSS&lt;/strong> &lt;strong>classes&lt;/strong> to apply styling to several methods, you may not be familiar with the concept of using the &lt;strong>name&lt;/strong> &lt;strong>field&lt;/strong> of a Kianda element to &lt;strong>instantly&lt;/strong> &lt;strong>apply&lt;/strong> &lt;strong>styes&lt;/strong> to that element that you have already developed. Within the &lt;strong>global&lt;/strong> &lt;strong>CSS&lt;/strong> file, we can create &lt;strong>style&lt;/strong> &lt;strong>rules&lt;/strong> and have them to apply to any &lt;strong>data&lt;/strong>-&lt;strong>name&lt;/strong> that contains a name that we precede with a &lt;strong>question&lt;/strong> &lt;strong>mark&lt;/strong>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">div&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#204a87;font-weight:bold">data-name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">$=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;?tile&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">form-group&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">border-radius&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">12&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">border&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span> &lt;span style="color:#204a87;font-weight:bold">solid&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">#e7eaee&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">background&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">white&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">margin-bottom&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">15&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">padding-bottom&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">padding-top&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">18&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">padding-right&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">15&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It is good practice to use &lt;strong>relevant&lt;/strong> and &lt;strong>descriptive&lt;/strong> names for these style rules. In the example above we have a “?tile” section with styling rules to style an element to that the &lt;strong>appearance&lt;/strong> of a tile.&lt;/p>
&lt;p>We can then add &amp;ldquo;&lt;strong>?tile&lt;/strong>&amp;rdquo; to the end of the name of any form &lt;strong>element&lt;/strong> for example a panel that we want to take the apply that &lt;strong>appearance&lt;/strong> to.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/destination-panel-tile.jpg" alt="Tile example in a panel">&lt;/p>
&lt;p>In the image below “&lt;strong>?tile&lt;/strong>” was used to style these two panels into two &lt;strong>tiles&lt;/strong> aligned &lt;strong>side&lt;/strong> &lt;strong>by&lt;/strong> &lt;strong>side&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/table-styling-customised.png" alt="Table styling example">&lt;/p>
&lt;p>The benefit of this method is that styles can be &lt;strong>created&lt;/strong> &lt;strong>once&lt;/strong> and very quickly applied to &lt;strong>elements&lt;/strong> anywhere in your Kianda platform. This saves process designers having to revisit the &lt;strong>CSS&lt;/strong> &lt;strong>file&lt;/strong> every time they are creating a new process or dashboard.&lt;/p>
&lt;h4 id="small-touches-example">Small touches example&lt;/h4>
&lt;p>Here is another example of that demonstrates how you can create a &lt;strong>defined&lt;/strong> and &lt;strong>recognizable&lt;/strong> design without bloating the visuals of your workspace. In this example the below a style rule is used to add a gold underline to the &lt;strong>header&lt;/strong> &lt;strong>titles&lt;/strong> of processes to separate the title of the page and the specific course you are currently viewing.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">div&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#204a87;font-weight:bold">data-name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">$=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;?headerTitle&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">not&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">is-design&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">header-prefix&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">font-size&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">medium&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">text-transform&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">uppercase&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">color&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">#004B8B&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">margin-right&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">border-bottom&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span> &lt;span style="color:#204a87;font-weight:bold">solid&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">#F9DCC1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://docs.kianda.com/images/gold-underline-example.jpg" alt="Gold underline styling example">&lt;/p>
&lt;p>Adding small details like this can have a great affect on the &lt;strong>aesthetic&lt;/strong> of your Kianda platform.&lt;/p>
&lt;h3 id="using-font-awesome-icons">Using Font Awesome icons&lt;/h3>
&lt;p>In addition to creating customised styling, you can add icons to your controls, such as buttons, or to your dashboard display as shown in the image below, to make your workspace features stand out.&lt;/p>
&lt;img src="https://docs.kianda.com/images/icon-examples.jpg" alt="Icon examples" style="zoom:80%;" />
&lt;p>Icons from the &lt;a href="https://fontawesome.com/">&lt;strong>Font&lt;/strong> &lt;strong>Awesome&lt;/strong>&lt;/a> icon library can be added using HTML to act as &lt;strong>buttons&lt;/strong>. This creates a more visually appealing layout and the &lt;strong>function&lt;/strong> can be instantly recognizable to users by the &lt;strong>icon&lt;/strong> you choose. Once you have found an icon you wish to use you can then use the provided &lt;strong>HTML&lt;/strong> on the website to add it to your &lt;strong>Kianda&lt;/strong> &lt;strong>workspace&lt;/strong>, it can then be wrapped in a &lt;a href="https://www.w3schools.com/tags/tag_a.asp">HTML link tag&lt;/a> to turn it into a &lt;strong>usable&lt;/strong> &lt;strong>button&lt;/strong>.&lt;/p>
&lt;p>You can have icons display before or after the controls by using a CSS rule, for example use a &amp;lsquo;before&amp;rsquo; selector in CSS to make the icons display as shown in the image above. The CSS rule can be given the Unicode ID of the Font Awesome icon you wish to display and the browser will render the icon at runtime.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">a&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">before&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">font-family&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Font Awesome 5 Free&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">content&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;\f007&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">display&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">inline-block&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">padding-right&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">vertical-align&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">middle&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">font-weight&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">900&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For more information on Font Awesome icons go to this &lt;a href="https://fontawesome.com/docs/web/setup/upgrade/pseudo-elements">documentation&lt;/a> link or see this &lt;a href="https://fontawesome.com/docs/web/setup/upgrade/pseudo-elements">cheatsheet of Unicode IDs&lt;/a> for icons, for example F007 used in the code snippet above is a user icon, while F015 is the home icon, seen in the image above. You can test out designs using this &lt;a href="http://jsfiddle.net/z2eakghc/9/">JSFiddle&lt;/a> or code playground.&lt;/p>
&lt;h3 id="using-modals-in-form-design">Using modals in form design&lt;/h3>
&lt;p>In addition to styling forms and form elements, &lt;strong>modals&lt;/strong> provide a useful way to communicate with users by displaying information in front of page content requiring the user to engage with an action within the modal . In the example below, you can see how the Transfer assets modal appears on the page, requiring users to view and interact with functionality &lt;strong>contained&lt;/strong> &lt;strong>within&lt;/strong> &lt;strong>the modal&lt;/strong> without having to navigate away from the &lt;strong>current&lt;/strong> &lt;strong>page&lt;/strong> they are on. This is not only &lt;strong>convenient&lt;/strong> for the user but it adds a &lt;strong>layered&lt;/strong> &lt;strong>design&lt;/strong> to your Kianda platform and its aesthetically pleasing to view.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/modal-design-example.jpg" alt="Modal example">&lt;/p>
&lt;p>A &lt;strong>JavaScript&lt;/strong> &lt;strong>function&lt;/strong> called &lt;code>showModalForm&lt;/code> can be called to &lt;strong>display&lt;/strong> a page in a &lt;strong>form&lt;/strong> &lt;strong>modal&lt;/strong>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">a&lt;/span> &lt;span style="color:#c4a000">onclick&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;showModalForm(&amp;#39;demo-process&amp;#39;,true, &amp;#39;&amp;amp;formName=SignUpform&amp;#39;)&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>Open Demo Process&lt;span style="color:#000;font-weight:bold">&amp;lt;/&lt;/span>&lt;span style="color:#204a87;font-weight:bold">a&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This function also allows you to &lt;strong>pass&lt;/strong> &lt;strong>data&lt;/strong> into the modal for use within that form, for example:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>nameOrUrl&lt;/code>&lt;/strong> - you can add in the &lt;strong>name of a process or add in a URL&lt;/strong>, where the URL might be a website to open in the modal&lt;/li>
&lt;li>&lt;code>isNew&lt;/code> parameter - where &lt;strong>&lt;code>true&lt;/code> - creates a new process instance&lt;/strong>, otherwise choose &lt;strong>&lt;code>false&lt;/code> to open an existing process instance in preview mode&lt;/strong>&lt;/li>
&lt;li>&lt;strong>&lt;code>params&lt;/code>&lt;/strong> - &lt;strong>URL parameters&lt;/strong> appended to the URL, for example &amp;lsquo;SignUpform&amp;rsquo; as used above where formName parameter is reserved; if the form is active, the user can be directed to the specified form&lt;/li>
&lt;/ul>
&lt;p>Now that you have been introduced to a variety of design considerations, go to the next section to learn how to use the &lt;a href="#how-to-get-started-with-global-css">Global CSS Editor&lt;/a>.&lt;/p>
&lt;h2 id="how-to-get-started-with-global-css">How to get started with Global CSS&lt;/h2>
&lt;p>To use a Global CSS file:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>As an &lt;strong>administrator&lt;/strong>, go to &lt;strong>Administration&lt;/strong> &amp;gt; &lt;strong>Subscription&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click on &lt;strong>Look and Feel&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>On the &lt;strong>Look and Feel&lt;/strong> page, click on the &lt;strong>ellipsis&lt;/strong> button &lt;img src="https://docs.kianda.com/images/expression.jpg" alt="Ellipsis button"> beside the &lt;strong>Custom CSS Url&lt;/strong> to access the Global CSS file.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/custom-css-url.jpg" alt="Custom CSS Url file">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The &lt;strong>CSS Editor&lt;/strong> opens, allowing you to add CSS, or edit code if your organisation has already added in styling. The image below shows an example of code that has been added in.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/css-editor.jpg" alt="CSS Editor">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Within the file you can create your own styling, for example:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Class selectors&lt;/strong> example&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">widget-list-row&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">border-radius&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">background-color&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">#ffffff&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">padding&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">transition&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">background-color&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ms&lt;/span> &lt;span style="color:#204a87;font-weight:bold">ease-out&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>Class selector and element&lt;/strong> example:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">pagination&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">active&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">a&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">background-color&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">#101641&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">border-color&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">#101641&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;strong>Elements and attributes&lt;/strong> example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">field-panel&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#204a87;font-weight:bold">data-name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">$=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;?tile-view&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">form-group&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">border-radius&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">12&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">border&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span> &lt;span style="color:#204a87;font-weight:bold">solid&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">#e7eaee&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">background&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">white&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">margin-bottom&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">15&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">padding-bottom&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">padding-top&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">18&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">padding-right&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">15&lt;/span>&lt;span style="color:#204a87;font-weight:bold">px&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Media controls&lt;/strong> example:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">@&lt;/span>&lt;span style="color:#204a87;font-weight:bold">media&lt;/span> &lt;span style="color:#204a87;font-weight:bold">only&lt;/span> &lt;span style="color:#204a87;font-weight:bold">screen&lt;/span> &lt;span style="color:#204a87;font-weight:bold">and&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">max-width&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">767px&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">field-panel&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#204a87;font-weight:bold">data-name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">$=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;?tile-view&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">form-group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">not&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">is-design&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">background&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">whitesmoke&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>The next section deals with &lt;a href="#adding-items-to-global-css">Adding items&lt;/a> to the file.&lt;/p>
&lt;h2 id="adding-items-to-global-css">Adding items to Global CSS&lt;/h2>
&lt;p>Remember additional items can be added to the file whenever you wish. Best practice is to update only individual items based on the &lt;strong>Unique Name&lt;/strong> which becomes an attribute. The example below uses the concept shown of &lt;strong>CSS classes&lt;/strong> as shown in the section &lt;a href="#effective-use-of-css-classes">Effective use of CSS classes&lt;/a>&lt;/p>
&lt;h3 id="customised-button-example">Customised button example&lt;/h3>
&lt;p>For example, if you have a button in a process and you want to change background colour and text colour, first you need to note down the &lt;strong>Unique Name.&lt;/strong> Next, because you only want to target the button in a specific process and not all buttons in the system, use the &lt;strong>Element and attribute&lt;/strong> selector. This will take the form of:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">button&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#204a87;font-weight:bold">data-name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">$=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;?pinkButton&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">not&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">is-design&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>
&lt;p>Within the &lt;strong>Global CSS File&lt;/strong> add the necessary details, for example the above along with the necessary CSS properties, for example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">button&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#204a87;font-weight:bold">data-name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">$=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;?pinkButton&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">not&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">is-design&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">color&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">green&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">background-color&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#204a87;font-weight:bold">pink&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>When you are finished making changes click on &lt;strong>OK&lt;/strong> or else click on &lt;strong>Close&lt;/strong> at any time to close the dialog box.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ensure to save changes to the file by clicking on the &lt;strong>Save Changes&lt;/strong> button in &lt;strong>Look and Feel&lt;/strong>. You should see a notification to say &lt;strong>Subscription settings updated&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/subscription-settings.jpg" alt="Subscription settings updated">&lt;/p>
&lt;p>Once the file is saved ensure to refresh Kianda to download the most recent changes into the cache.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click on &lt;strong>Back&lt;/strong> to return to the &lt;strong>Subscription&lt;/strong> page and go to &lt;strong>Administration&lt;/strong> and &lt;strong>Designer&lt;/strong> to navigate to the desired process. Within that process &lt;strong>select the button&lt;/strong> that needs the custom CSS.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click on the &lt;strong>Edit/Pen&lt;/strong> button to edit the field and enter the attribute name into the &lt;strong>Unique Name&lt;/strong> field.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/send-email-pink-name.jpg" alt="Unique Name field change">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click on &lt;strong>OK&lt;/strong> to submit changes or click on &lt;strong>Close&lt;/strong> at any time to exit the dialog box.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When the process is viewed in preview mode or published the Global CSS will override the default system CSS.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/send-email-pink-button.jpg" alt="CSS styled button">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>The steps above can be used to edit any element in the subscription using any standard CSS syntax.&lt;/p>
&lt;h3 id="process-and-dashboard-specific-css">Process and dashboard specific CSS&lt;/h3>
&lt;p>The steps in the &lt;a href="#adding-items-to-global-css">Adding items to Global CSS&lt;/a> section provide a perfect means to ensure your CSS is available throughout the workspace subscription. However changes may unintentionally cause changes in other parts of the system. For this reason, it possible to add &lt;strong>localised CSS&lt;/strong> to each process and dashboard through a rich text field.
For example, if you want to change all buttons in the process to have a background colour of Magenta, you can follow the following steps.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Navigate to the process and add a &lt;strong>Rich Text&lt;/strong> field.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Give the field a title&lt;/strong> &lt;strong>_CSS&lt;/strong>. Within the Rich text field click on the &lt;strong>Code View&lt;/strong> button &lt;img src="https://docs.kianda.com/images/source-code.jpg" alt="Code view button">to open up the code editor.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/richtext-css.jpg" alt="Richtext _CSS title">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Enter the &lt;code>&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code> tags into the body.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/style-tags-richtext.jpg" alt="Style tags in Richtext body">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click the &lt;strong>Code View&lt;/strong> button again to commit the change and click &lt;strong>OK&lt;/strong> when you are finished editing the dialog box, or click on &lt;strong>Close&lt;/strong> to exit the dialog box at any time.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>To make all buttons show the changes, use the class selector by editing the richtext field again and go into the &lt;strong>Code View&lt;/strong> and add the necessary CSS.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click on the &lt;strong>Code View&lt;/strong> button again to commit changes and then click on &lt;strong>OK&lt;/strong> when you are finished editing the dialog box.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/richtext-magenta.jpg" alt="Richtext CSS example">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The buttons now have a background colour of magenta provided they do not have a custom colour already selected.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/button-color-change.jpg" alt="Richtext button styling example">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>The steps above can be used to edit any element in a &lt;strong>process or dashboard&lt;/strong> using any standard CSS syntax.&lt;/p>
&lt;h3 id="whats-next--idea-iconimages18png">What&amp;rsquo;s next &lt;img src="https://docs.kianda.com/images/18.png" alt="Idea icon">&lt;/h3>
&lt;p>To review the range of fields available in Kianda that can have styling applied go to &lt;a href="https://docs.kianda.com/docs/platform/controls/">Controls&lt;/a>.&lt;/p>
&lt;p>To learn more about designing processes go to &lt;a href="https://docs.kianda.com/docs/platform/application-designer/">Application designer&lt;/a>.&lt;/p>
&lt;p>To learn more about dashboards go to &lt;a href="https://docs.kianda.com/docs/platform/pages/">Dashboard pages&lt;/a>.&lt;/p></description></item><item><title>Docs: Global JavaScript file</title><link>https://docs.kianda.com/docs/low-code/global-javascript-file/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/low-code/global-javascript-file/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Page under construction&lt;/p>
&lt;/div></description></item><item><title>Docs: Custom field widget development</title><link>https://docs.kianda.com/docs/low-code/field-widget/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/low-code/field-widget/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>There are currently 16 predefined field or control widgets available to use in forms and processes, covering 3 categories: &lt;a href="https://docs.kianda.com/docs/platform/controls/input/">Input&lt;/a>, &lt;a href="https://docs.kianda.com/docs/platform/controls/layout/">Layout&lt;/a> and &lt;a href="https://docs.kianda.com/docs/platform/controls/actions/">Actions&lt;/a>. Click on the relevant links to find out more about each area. However if customised fields have been created, they are available to those with the role &lt;strong>Administration&lt;/strong> and &lt;strong>Design business process&lt;/strong> to use in process and form design in Kianda &lt;strong>Designer&lt;/strong>. Customised fields are available under the &lt;strong>Custom controls&lt;/strong> category.&lt;/p>
&lt;p>Custom controls are created by &lt;strong>Administrators&lt;/strong> or &lt;strong>Developers&lt;/strong> who have coding experience to use Kianda&amp;rsquo;s low-code development feature, Kianda &lt;strong>Developer&lt;/strong>.&lt;/p>
&lt;h2 id="how-to-get-started">How to get started&lt;/h2>
&lt;p>If you are an experienced developer with an &lt;strong>Administrator&lt;/strong> or &lt;strong>Developer&lt;/strong> role (see &lt;a href="https://docs.kianda.com/docs/platform/administration/users/">Users &amp;amp; Groups&lt;/a>), you can create a new custom widget within Kianda by doing the following:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Navigate to &lt;strong>Administration&lt;/strong> in the left-hand side menu, and click on &lt;strong>Developer&lt;/strong>. This will bring you to the &lt;strong>Developer resources&lt;/strong> page.&lt;/p>
&lt;p>&lt;em>&lt;strong>Widget view&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/widgetview2.jpg" alt="Widget view">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click on &lt;strong>New widget&lt;/strong> to create a new field/control widget.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fill out the &lt;strong>Edit widget&lt;/strong> dialog box - that is &lt;strong>Title&lt;/strong>, &lt;strong>Unique Id&lt;/strong> (which is autofilled from the title), &lt;strong>Widget Icon&lt;/strong>, where you can select from hundreds of icons, and then &lt;strong>Widget type&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/editwidget.gif" alt="Edit widget">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click on &lt;strong>OK&lt;/strong> when complete.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When you create a custom field widget, the &lt;strong>Widget UI&lt;/strong> and &lt;strong>Widget Code&lt;/strong> tabs are displayed. These two screenshots show the default code for &amp;lsquo;Widget UI&amp;rsquo; and &amp;lsquo;Widget Code&amp;rsquo;.&lt;/p>
&lt;p>The &amp;lsquo;Widget UI&amp;rsquo; defines the HTML, handlers, expressions and more.&lt;/p>
&lt;p>&lt;em>&lt;strong>Field widget UI&lt;/strong>&lt;/em>
&lt;img src="https://docs.kianda.com/images/widgetfieldui.gif" alt="Widget UI">&lt;/p>
&lt;p>The &amp;lsquo;Widget Code&amp;rsquo; defines the logic and functions.&lt;/p>
&lt;p>&lt;em>&lt;strong>Field widget code&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/widgetcodefield.png" alt="Widget code">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Widgets created are visible in the main widget view. From here, you can edit a widget by clicking on the &lt;strong>Edit&lt;/strong> button &lt;img src="https://docs.kianda.com/images/bluepen.png" alt="Pen button"> (Pen icon), delete a widget by clicking on the &lt;strong>Bin/Trash&lt;/strong> button &lt;img src="https://docs.kianda.com/images/binicon.png" alt="Bin button"> and restore earlier versions of a widget by clicking on the &lt;strong>Version restore&lt;/strong> button &lt;img src="https://docs.kianda.com/images/bluerestore.png" alt="Restore">.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Custom field widgets you create will be available for use in Kianda Designer by going to &lt;strong>Side menu&lt;/strong> &amp;gt; &lt;strong>Administration&lt;/strong> &amp;gt; &lt;strong>Designer&lt;/strong> &amp;gt; &lt;strong>click on an existing process&lt;/strong> or &lt;strong>Add new&lt;/strong> to add a new process (then click on a form to edit it), and see the Custom fields added under &lt;strong>Controls&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/customcontrol.png" alt="Custom fields">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="whats-next-idea-iconimages18png">What&amp;rsquo;s next &lt;img src="https://docs.kianda.com/images/18.png" alt="Idea icon">&lt;/h2>
&lt;p>To continue with low-code development, you can view &lt;a href="https://docs.kianda.com/docs/low-code/templating-basics/">Templating basics&lt;/a>. If you would like to learn more about ‘no-code versus low-code’ in general, see &lt;a href="https://docs.kianda.com/docs/getting-started/welcome/no-code/">What is no-code?&lt;/a> and &lt;a href="https://docs.kianda.com/docs/getting-started/welcome/low-code/">What is low-code?&lt;/a>.&lt;/p></description></item><item><title>Docs: Custom rule widget development</title><link>https://docs.kianda.com/docs/low-code/rule-widget/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/low-code/rule-widget/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>There are currently 60 predefined rules available to use in forms and processes, across 10 categories:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/rules/workflow/">Workflow&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/rules/communications/">Communications&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/rules/data/">Data&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/rules/users/">Users&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/rules/files/">File management&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/rules/tables/">Tables&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/rules/dates/">Dates&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/rules/form-actions/">Form actions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/rules/sharepoint/">SharePoint&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/rules/kianda-ai/">KiandaAI&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Click on the relevant links to find out more about each area. However if customised rules have been created, they are available to those with the role &lt;strong>Administration&lt;/strong> and &lt;strong>Design business process&lt;/strong> to use in process and form design in Kianda &lt;strong>Designer&lt;/strong>. Customised rules are available under the &lt;strong>Custom rules&lt;/strong> category under &lt;strong>Add a rule&lt;/strong>.&lt;/p>
&lt;p>Custom rules are created by &lt;strong>Administrators&lt;/strong> or &lt;strong>Developers&lt;/strong> who have coding experience to use Kianda&amp;rsquo;s low-code development feature, Kianda &lt;strong>Developer&lt;/strong>.&lt;/p>
&lt;h2 id="how-to-get-started">How to get started&lt;/h2>
&lt;p>If you are an experienced developer with an &lt;strong>Administrator&lt;/strong> or &lt;strong>Developer&lt;/strong> role, see &lt;a href="https://docs.kianda.com/docs/platform/administration/users/">Users &amp;amp; Groups&lt;/a>, you can create a new rule widget within Kianda by doing the following:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Navigate to &lt;strong>Administration&lt;/strong> in the left-hand side menu, and click on &lt;strong>Developer&lt;/strong>. This will bring you to the &lt;strong>Developer resources&lt;/strong> page.&lt;/p>
&lt;p>&lt;em>&lt;strong>Widget view&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/widgetview2.jpg" alt="Widget view">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click on &lt;strong>New widget&lt;/strong> to create a new rule widget.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fill out the &lt;strong>Edit widget&lt;/strong> dialog box - that is &lt;strong>Title&lt;/strong>, &lt;strong>Unique Id&lt;/strong> (which is autofilled from the title), &lt;strong>Widget Icon&lt;/strong>, where you can select from hundreds of icons, and then &lt;strong>Widget type&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/rule-widget.jpg" alt="Edit widget">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click on &lt;strong>OK&lt;/strong> when complete.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When you create a custom field widget, the &lt;strong>Widget UI&lt;/strong> and &lt;strong>Widget Code&lt;/strong> tabs are displayed. These two screenshots show the default code for &amp;lsquo;Widget UI&amp;rsquo; and &amp;lsquo;Widget Code&amp;rsquo;.&lt;/p>
&lt;p>The &amp;lsquo;Widget UI&amp;rsquo; defines the HTML, handlers, expressions and more.&lt;/p>
&lt;p>&lt;em>&lt;strong>Rule widget UI&lt;/strong>&lt;/em>
&lt;img src="https://docs.kianda.com/images/rule-widget-ui.jpg" alt="Widget UI">&lt;/p>
&lt;p>The &amp;lsquo;Widget Code&amp;rsquo; defines the logic and functions.&lt;/p>
&lt;p>&lt;em>&lt;strong>Rule widget code&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/rule-widget-code.jpg" alt="Widget code">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Widgets created are visible in the main widget view. From here, you can edit a widget by clicking on the &lt;strong>Edit&lt;/strong> button &lt;img src="https://docs.kianda.com/images/bluepen.png" alt="Pen button"> (Pen icon), delete a widget by clicking on the &lt;strong>Bin/Trash&lt;/strong> button &lt;img src="https://docs.kianda.com/images/binicon.png" alt="Bin button"> and restore earlier versions of a widget by clicking on the &lt;strong>Version restore&lt;/strong> button &lt;img src="https://docs.kianda.com/images/bluerestore.png" alt="Restore">.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Custom rule widgets you create will be available for use in Kianda Designer by going to &lt;strong>Side menu&lt;/strong> &amp;gt; &lt;strong>Administration&lt;/strong> &amp;gt; &lt;strong>Designer&lt;/strong> &amp;gt; &lt;strong>click on an existing process&lt;/strong> or &lt;strong>Add new&lt;/strong> to add a new process, then click on &lt;strong>Add a rule&lt;/strong> to see the &lt;strong>Custom&lt;/strong> rule category added under &lt;strong>Rules&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/custom-rule-category.jpg" alt="Custom fields">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="whats-next-idea-iconimages18png">What&amp;rsquo;s next &lt;img src="https://docs.kianda.com/images/18.png" alt="Idea icon">&lt;/h2>
&lt;p>To continue with low-code development, you can view &lt;a href="https://docs.kianda.com/docs/low-code/templating-basics/">Templating basics&lt;/a>. If you would like to learn more about low-code go to the &lt;a href="https://docs.kianda.com/docs/low-code/">Low-code development&lt;/a> page and from there navigate to other pages on low-code practices.&lt;/p>
&lt;p>To create other widgets go to &lt;a href="https://docs.kianda.com/docs/low-code/field-widget/">Custom field widget&lt;/a> and &lt;a href="https://docs.kianda.com/docs/low-code/dashboard-widget/">Custom dashboard widget&lt;/a> pages to find out more.&lt;/p></description></item><item><title>Docs: Custom dashboard widget development</title><link>https://docs.kianda.com/docs/low-code/dashboard-widget/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/low-code/dashboard-widget/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>There are currently 7 predefined dashboard widgets available to use to create illustrative and responsive pages to show how your processes are performing at a glance. These widgets are:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/pages/richtext/">Richtext&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/pages/tile/">Tile&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/pages/list/">List&lt;/a>&lt;/li>
&lt;li>&lt;a href="//docs/platform/pages/chart/">Chart&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/pages/filter/">Filter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/pages/link/">Link&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.kianda.com/docs/platform/pages/walkthrough/">Walk-through&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Click on the relevant links to find out more about each area. However if customised dashboards have been created, they are available to those with the &lt;strong>Administration&lt;/strong> role to use in dashboard management in Kianda. Customised dashboards are available in the drop-down list for widgets when creating or editing dashboard pages.&lt;/p>
&lt;p>Custom dashboards are created by &lt;strong>Administrators&lt;/strong> or &lt;strong>Developers&lt;/strong> who have coding experience to use Kianda&amp;rsquo;s low-code development feature, Kianda &lt;strong>Developer&lt;/strong>.&lt;/p>
&lt;h2 id="how-to-get-started">How to get started&lt;/h2>
&lt;p>If you are an experienced developer with an &lt;strong>Administrator&lt;/strong> or &lt;strong>Developer&lt;/strong> role, see &lt;a href="https://docs.kianda.com/docs/platform/administration/users/">Users &amp;amp; Groups&lt;/a>, you can create a new dashboard widget within Kianda by doing the following:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Navigate to &lt;strong>Administration&lt;/strong> in the left-hand side menu, and click on &lt;strong>Developer&lt;/strong>. This will bring you to the &lt;strong>Developer resources&lt;/strong> page. Dashboard widgets are of type &amp;lsquo;Widget&amp;rsquo; in this list.&lt;/p>
&lt;p>&lt;em>&lt;strong>Widget view&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/widgetview2.jpg" alt="Widget view">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click on &lt;strong>New widget&lt;/strong> to create a new rule widget.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fill out the &lt;strong>Edit widget&lt;/strong> dialog box - that is &lt;strong>Title&lt;/strong>, &lt;strong>Unique Id&lt;/strong> (which is autofilled from the title), &lt;strong>Widget Icon&lt;/strong>, where you can select from hundreds of icons, and then &lt;strong>Widget type&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/edit-dashboard-widget.jpg" alt="Edit widget">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click on &lt;strong>OK&lt;/strong> when complete.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When you create a custom field widget, the &lt;strong>Widget UI&lt;/strong> and &lt;strong>Widget Code&lt;/strong> tabs are displayed. These two screenshots show the default code for &amp;lsquo;Widget UI&amp;rsquo; and &amp;lsquo;Widget Code&amp;rsquo;.&lt;/p>
&lt;p>The &amp;lsquo;Widget UI&amp;rsquo; defines the HTML, handlers, expressions and more.&lt;/p>
&lt;p>&lt;em>&lt;strong>Dashboard widget UI&lt;/strong>&lt;/em>
&lt;img src="https://docs.kianda.com/images/dashboard-widget-ui.jpg" alt="Widget UI">&lt;/p>
&lt;p>The &amp;lsquo;Widget Code&amp;rsquo; defines the logic and functions.&lt;/p>
&lt;p>&lt;em>&lt;strong>Dashboard widget code&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/dashboard-widget-code.jpg" alt="Widget code">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Widgets created are visible in the main widget view. From here, you can edit a widget by clicking on the &lt;strong>Edit&lt;/strong> button &lt;img src="https://docs.kianda.com/images/bluepen.png" alt="Pen button"> (Pen icon), delete a widget by clicking on the &lt;strong>Bin/Trash&lt;/strong> button &lt;img src="https://docs.kianda.com/images/binicon.png" alt="Bin button"> and restore earlier versions of a widget by clicking on the &lt;strong>Version restore&lt;/strong> button &lt;img src="https://docs.kianda.com/images/bluerestore.png" alt="Restore">.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Custom rule widgets you create will be available for use in dashboard pages for &lt;strong>Administrators&lt;/strong> by going to &lt;strong>Side menu&lt;/strong> &amp;gt; &lt;strong>Home&lt;/strong> &amp;gt; and click on the &lt;strong>Create a new page&lt;/strong> to create a new dashboard page, or click on an existing dashboard in the left-hand pane.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click on the &lt;strong>Edit current page&lt;/strong> button &lt;img src="https://docs.kianda.com/images/edit-current-page.jpg" alt="Edit page button"> to make the widget menu appear.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The newly created custom dashboard widget will be available in the drop-down menu by clicking on the down arrow.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/custom-dashboard-widgets.jpg" alt="Custom dashboard widgets drop-down list">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Then click on the new widget design name to implement the widget, starting with editing the widget and then change settings, see &lt;a href="https://docs.kianda.com/docs/platform/pages/#how-to-edit-dashboard-page-settings">Edit dashboard page settings&lt;/a> for more information on general settings.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="whats-next-idea-iconimages18png">What&amp;rsquo;s next &lt;img src="https://docs.kianda.com/images/18.png" alt="Idea icon">&lt;/h2>
&lt;p>To continue with low-code development, you can view &lt;a href="https://docs.kianda.com/docs/low-code/templating-basics/">Templating basics&lt;/a>. If you would like to learn more about low-code go to the &lt;a href="https://docs.kianda.com/docs/low-code/">Low-code development&lt;/a> page and from there navigate to other pages on low-code practices.&lt;/p>
&lt;p>To create other widgets go to &lt;a href="https://docs.kianda.com/docs/low-code/field-widget/">Custom field widget&lt;/a> and &lt;a href="https://docs.kianda.com/docs/low-code/rule-widget/">Custom rule widget&lt;/a> pages to find out more.&lt;/p>
&lt;p>Go to the link on &lt;a href="https://docs.kianda.com/docs/platform/pages/">Dashboards&lt;/a> to learn more about dashboard pages.&lt;/p></description></item><item><title>Docs: Webhooks</title><link>https://docs.kianda.com/docs/low-code/webhooks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/low-code/webhooks/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Kianda &lt;strong>Developer&lt;/strong> includes a &lt;strong>webhooks&lt;/strong> function. A &lt;strong>webhook&lt;/strong> or web &lt;strong>callback&lt;/strong> allows information to be pushed from Kianda to your applications in real time when &lt;strong>process instances are created, deleted or updated&lt;/strong>. This provides an efficient way to execute event reactions, thereby eliminating the need to continuously poll for data.&lt;/p>
&lt;p>The Kianda &lt;strong>webhooks&lt;/strong> function allows you to configure URLs that can respond to process instance creation, deletion and update events. When these events happen, the webhook will then make a HTTP request to your application, including variables like the process instance name, querying the provided URL, so your application can be updated.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> Callback has a timeout of 10 seconds.&lt;/p>
&lt;h2 id="how-to-get-started">How to get started&lt;/h2>
&lt;p>You must have an &lt;strong>Administrator&lt;/strong> or &lt;strong>Developer&lt;/strong> role see &lt;a href="https://docs.kianda.com/docs/platform/administration/users/">Users &amp;amp; Groups&lt;/a> for more details on roles. Then to get started with webhooks:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Navigate to &lt;strong>Administration&lt;/strong> in the left-hand side menu, and click on &lt;strong>Developer&lt;/strong>. This will bring you to the &lt;strong>Developer resources&lt;/strong> page.&lt;/p>
&lt;p>&lt;em>&lt;strong>Developer resources page&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/widgetview2.jpg" alt="Widget view">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click on &lt;strong>Webhooks&lt;/strong> to create a process instance callback.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The &lt;strong>Instance Callback URLs&lt;/strong> dialog box appears.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/webhooks50.gif" alt="Webhooks">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use the slider to turn on the relevant callback:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Enable Created Callback&lt;/strong> - this will enable a URL callback every time a process instance is &lt;strong>updated&lt;/strong>. This results in a &lt;strong>HTTP GET request&lt;/strong> with parameters &lt;code>instanceID={instanceID}, processName={processName}&lt;/code> and &lt;code>**eventType=created**&lt;/code> being issued to the given URL.&lt;/li>
&lt;li>&lt;strong>Enable Updated Callback&lt;/strong> - this will enable a URL callback every time a process instance is &lt;strong>updated&lt;/strong>. This results in a &lt;strong>HTTP GET request&lt;/strong> with parameters &lt;code>instanceID={instanceID}, processName={processName}&lt;/code> and &lt;code>**eventType=updated**&lt;/code> being issued to the given URL.&lt;/li>
&lt;li>&lt;strong>Enable Deleted Callback&lt;/strong> - this will enable a URL callback every time a process instance is &lt;strong>deleted&lt;/strong>. This results in a &lt;strong>HTTP GET request&lt;/strong> with parameters &lt;code>instanceID={instanceID}, processName={processName}&lt;/code> and &lt;code>**eventType=deleted**&lt;/code> being issued to the given URL.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>In each case &lt;strong>type in the URL&lt;/strong> to respond to process instance create, update and deleted events.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click on the &lt;strong>Help&lt;/strong> button &lt;img src="https://docs.kianda.com/images/webhookhelp.PNG" alt="Help button"> for clarification.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click on &lt;strong>OK&lt;/strong> when done or click on &lt;strong>Close&lt;/strong> at any stage to close the dialog box.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="whats-next">What&amp;rsquo;s next&lt;/h2>
&lt;p>To continue with low-code development, you can view &lt;a href="https://docs.kianda.com/docs/low-code/templating-basics/">Templating basics&lt;/a>. If you would like to learn more about ‘no-code versus low-code’ in general, see &lt;a href="https://docs.kianda.com/docs/getting-started/welcome/no-code/">What is no-code?&lt;/a> and &lt;a href="https://docs.kianda.com/docs/getting-started/welcome/low-code/">What is low-code?&lt;/a>.&lt;/p></description></item><item><title>Docs: Low-Code development best practices</title><link>https://docs.kianda.com/docs/low-code/best-practices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/low-code/best-practices/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Page under construction&lt;/p>
&lt;/div></description></item></channel></rss>