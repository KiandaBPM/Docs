<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kianda no-code platform for business process automation – General</title><link>https://docs.kianda.com/docs/platform/rules/general/</link><description>Recent content in General on Kianda no-code platform for business process automation</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.kianda.com/docs/platform/rules/general/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Rule conditions</title><link>https://docs.kianda.com/docs/platform/rules/general/add-conditions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/platform/rules/general/add-conditions/</guid><description>
&lt;p>Flexible and dynamic conditions form an important component to make forms fully dynamic. It enables you to create natural language conditions when rules should be triggered.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/condition-editor.png" alt="Conditiion Editor">&lt;/p>
&lt;p>Conditions can be applied throughout your Kianda form to ensure your rules, etc. only run at specific points depending on certain criteria being met.&lt;/p>
&lt;p>&lt;strong>When to use:&lt;/strong>&lt;/p>
&lt;p>Conditions should be used when a rule should only be triggered at a specific point, i.e. an email only being sent if the status of a request is not closed.&lt;/p>
&lt;p>&lt;strong>You can add this rule:&lt;/strong>&lt;/p>
&lt;p>· to a field&lt;/p>
&lt;p>· to a form&lt;/p>
&lt;p>· to a process (the rule will run on load)&lt;/p>
&lt;p>&lt;strong>How to use:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>When you edit the condition, the first thing you will select is the Kianda field which you want the condition to apply to.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Next you select the match type of the filter, i.e. equal to, not equal to, is blank, etc.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The third portion of the condition is to select the value you wish to be your filter criteria. This could be either an existing field within Kianda, or it can be a text input you can add directly to the field.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can have multiple conditions and can have one or all of the filter criteria being met via the and/or setting which is available after adding a second condition.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It is also possible to add additional condition groups, this will allow you to have multiple different conditions depending on your needs.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click Ok and the condition is now set.&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Docs: Multiple rules</title><link>https://docs.kianda.com/docs/platform/rules/general/multiple-rules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/platform/rules/general/multiple-rules/</guid><description>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>When working with rules in forms, a key principle to consider is &lt;strong>rule order&lt;/strong>. This is important if there are &lt;strong>multiple rules&lt;/strong> attached to an item like a button. In this case the order of execution is important and can be modified to suit your needs.&lt;/p>
&lt;p>For example, you may want a &lt;strong>Send email rule&lt;/strong> to be executed once the &lt;strong>Submit&lt;/strong> button is clicked. This will result in an automated email to a designated person. You may also want to attach a report to this email, a report that is a complete form. In this example a &lt;strong>Generate word&lt;/strong> &lt;strong>document&lt;/strong> &lt;strong>rule&lt;/strong> could be used to generate a report when the &lt;strong>Submit&lt;/strong> button is clicked. In this example the &lt;strong>Generate word document rule&lt;/strong> has to be executed before the &lt;strong>Send email rule&lt;/strong>, so that the Word document can be generated and then attached to the email.&lt;/p>
&lt;p>The rule order consideration is therefore particularly important when rules are dependent on each other - where the output of one rule is the input of another rule.&lt;/p>
&lt;h3 id="changing-the-rule-order-of-multiple-rules">Changing the rule order of multiple rules&lt;/h3>
&lt;p>In the example below we will look at changing the rule order of a Send email rule attached to a Submit button. The &lt;strong>Submit&lt;/strong>, &lt;strong>Save&lt;/strong> and &lt;strong>Close&lt;/strong> buttons by default already have &lt;strong>Submit&lt;/strong>, &lt;strong>Save&lt;/strong> and &lt;strong>Close&lt;/strong> process rules attached, in order to allow form shutdown.&lt;/p>
&lt;p>To change rule order, when the rule is created:&lt;/p>
&lt;ol>
&lt;li>Click on the item that has multiple rules attached, for example a &lt;strong>Submit&lt;/strong> button.&lt;/li>
&lt;li>Click on &lt;strong>Rules&lt;/strong> in the right-hand pane, drag the &lt;strong>Send email&lt;/strong> rule to the top of the list by clicking on the rule and drag it to the top of the list, before &lt;strong>Submit&lt;/strong>, &lt;strong>Save&lt;/strong> and &lt;strong>Close&lt;/strong> rules.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://academy.kianda.com/wp-content/uploads/2022/03/ruleorder_frame.png" alt="img">&lt;/p>
&lt;p>The video below shows an example of a &lt;strong>Send email rule&lt;/strong> being created and saved. The rule is attached to the &lt;strong>Submit&lt;/strong> button. Once the rule is created, by default the new rule goes to the bottom of the list of rules. To move the rule, simply click on it and drag it to where you wish to place it. In this example we want the email sent &lt;u>before&lt;/u> any of the shutdown processes like Submit or Save, but after a &lt;strong>Generate Inspection&lt;/strong> rule, so the output from that rule can be used in the Send email rule.&lt;/p>
&lt;video width="100%" style="width:100%" controls>
&lt;source src="https://docs.kianda.com/videos/short-rule-order.mp4">
Your browser does not support the video tag.
&lt;/source>
&lt;/video></description></item><item><title>Docs: Expression builder</title><link>https://docs.kianda.com/docs/platform/rules/general/expression-builder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/platform/rules/general/expression-builder/</guid><description>
&lt;p>Expressions allow you to put together form &lt;strong>identifiers&lt;/strong> (form field IDs) and &lt;strong>constants&lt;/strong> with &lt;strong>operators&lt;/strong> and &lt;strong>functions&lt;/strong> to return a &lt;strong>dynamic value&lt;/strong> that can be used in various places – for example, in a form or field rule to automate processes.&lt;/p>
&lt;p>&lt;em>&lt;strong>Expressions&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://academy.kianda.com/wp-content/uploads/2022/02/expressions.gif" alt="Expression elements">&lt;/p>
&lt;p>For example, expressions could be used in the body of an automated email sent using the &lt;strong>Send email&lt;/strong> rule, as shown here:&lt;/p>
&lt;p>&lt;em>&lt;strong>Expression example&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://academy.kianda.com/wp-content/uploads/2022/03/expressioneg-1.gif" alt="img">&lt;/p>
&lt;p>In the example above, &lt;strong>[RequesterName]&lt;/strong> and &lt;strong>[category]&lt;/strong> are identifiers, that is unique IDs for form fields. &lt;strong>ProcessLink()&lt;/strong> is a function that will return a link to that process instance. Using the expressions above in an email will mean that every time an instance of the process runs, the values will be presented in an automated email, creating greater efficiencies and personalising the email for the recipient.&lt;/p>
&lt;h3 id="expression-builder">Expression builder&lt;/h3>
&lt;p>The expression builder is used to build expressions. You can search for fields and click on &lt;strong>Add to expression&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="https://docs.kianda.com/images/expressionbuilder.png" alt="Expression builder dialog box">&lt;/p>
&lt;p>In addition to defining your own expressions there is a set list of expressions found under &lt;strong>References&lt;/strong>, see table below for meaning.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Expression&lt;/th>
&lt;th style="text-align:left">Function&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">+, -, /, *&lt;/td>
&lt;td style="text-align:left">Performs one of the basic mathematical operations: add, subtract, divide or multiply.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Sum(arg1, arg2, &amp;hellip;)&lt;/td>
&lt;td style="text-align:left">Returns the sum of the arguments listed between the parentheses.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Date(arg1)&lt;/td>
&lt;td style="text-align:left">Converts the argument into a date.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">DateAdd(dateArg, day, month, year, hour, min)&lt;/td>
&lt;td style="text-align:left">Adds time to a given date. The date is stored in dateArg and the time to be added is stored in the day, month, year, hour and min arguments.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Status()&lt;/td>
&lt;td style="text-align:left">Returns the status of the current process.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">ProcessID()&lt;/td>
&lt;td style="text-align:left">Returns the ID of the current process.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">FormOwner(formName)&lt;/td>
&lt;td style="text-align:left">Returns the form owner(s) for the given form.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">FormCompleted(formName)&lt;/td>
&lt;td style="text-align:left">Returns the date completed for the given form.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Pad(value, size, symbol)&lt;/td>
&lt;td style="text-align:left">Adds left padding to the value with the symbol provided.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">QueryString(parameter)&lt;/td>
&lt;td style="text-align:left">Returns the URL query string for the given parameter (or an empty string if undefined).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">IsOnline()&lt;/td>
&lt;td style="text-align:left">Returns &amp;ldquo;yes&amp;rdquo; or &amp;ldquo;no&amp;rdquo; depending on the status of the online connection.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">ProcessLink()&lt;/td>
&lt;td style="text-align:left">Returns the HTML link to the current process The link text can be added between the parantheses e.g. ProcessLink(&amp;ldquo;click here&amp;rdquo;). This expression is for use in emails and rich text fields.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Digest()&lt;/td>
&lt;td style="text-align:left">Returns a summary of changes to fields in the current process. A table will be given with the original and new values.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Digest(&amp;lsquo;fieldName1&amp;rsquo;,&amp;lsquo;fieldName2&amp;rsquo;)&lt;/td>
&lt;td style="text-align:left">Returns a summary of the changes for the given fields. See note below.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">GetFieldText(&amp;lsquo;fieldName&amp;rsquo;)&lt;/td>
&lt;td style="text-align:left">Returns the text in the given field. See note below.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">GetFieldValue(&amp;lsquo;fieldName&amp;rsquo;)&lt;/td>
&lt;td style="text-align:left">Returns the value in the given field. See note below.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Note&lt;/strong>: In the case of the last three expressions, you should select a field which contains data. If you give the name of a button field for example, then no data will be returned.&lt;/p></description></item><item><title>Docs: Success/Error Mapping</title><link>https://docs.kianda.com/docs/platform/rules/general/success-error-mapping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/platform/rules/general/success-error-mapping/</guid><description>
&lt;p>Success/Error mapping can be used to populate fields within the Kianda form depending on the success or failure of a rule being executed.&lt;/p>
&lt;p>&lt;strong>When to use:&lt;/strong>&lt;/p>
&lt;p>Success/Error mapping should be used when after the execution of a rule you wish to have fields populated with specific values.&lt;/p>
&lt;p>&lt;strong>You can add this rule:&lt;/strong>&lt;/p>
&lt;p>· to a field&lt;/p>
&lt;p>· to a form&lt;/p>
&lt;p>· to a process (the rule will run on load)&lt;/p>
&lt;p>&lt;strong>How to use:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>For on success mapping select the “form field” and chose the field within the form which you want to store the information.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Then in the “data source field or text” you can select the column/field within your respective data source and this value will be stored in the “form field”.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For on error mapping, you simply need to select the field within the form which will store the error message&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Then select the error message from the dropdown. This error message will be a system generated error which will indicate what if anything has gone wrong when the rule executed.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click OK and the mapping is set.&lt;/p>
&lt;/li>
&lt;/ol></description></item></channel></rss>