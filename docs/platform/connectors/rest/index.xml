<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kianda no-code platform for business process automation – REST Web Service</title><link>https://docs.kianda.com/docs/platform/connectors/rest/</link><description>Recent content in REST Web Service on Kianda no-code platform for business process automation</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.kianda.com/docs/platform/connectors/rest/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: REST Service and Access Token refresh</title><link>https://docs.kianda.com/docs/platform/connectors/rest/rest-access-token/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kianda.com/docs/platform/connectors/rest/rest-access-token/</guid><description>
&lt;p>&lt;strong>Introduction&lt;/strong>&lt;/p>
&lt;p>When creating a &lt;strong>REST Service datasource&lt;/strong> that utilises oAuth to authenticate you may want to create the refresh functionality within Kianda. This is possible by creating a &lt;strong>Process&lt;/strong> and scheduling it to run before the Access Token expires.&lt;/p>
&lt;p>&lt;strong>How to get started&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Create the datasource&lt;/strong>&lt;/p>
&lt;p>First you will need to create the &lt;strong>datasource&lt;/strong>. For example, see a sample &lt;strong>REST Service&lt;/strong> below with two &lt;strong>REST Methods. The&lt;/strong> method titled &lt;strong>Get/Refresh Auth Token&lt;/strong> is what will be used to refresh the Access Token with the scheduled task. For more information on how to create &lt;strong>REST Services&lt;/strong> go to the &lt;strong>REST Service&lt;/strong> page &lt;em>&lt;strong>LINK&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;img src="file:///C:/Users/CAITRI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image002.jpg" alt="img">&lt;/p>
&lt;p>&lt;img src="file:///C:/Users/CAITRI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image004.jpg" alt="img">&lt;/p>
&lt;p>&lt;strong>Create the process&lt;/strong>&lt;/p>
&lt;p>Next, the process to contain fields for the parameters for the request body and fields to hold the parameters from the response.&lt;/p>
&lt;p>In the request body there are five parameters which need to be populated, the grant_type, client_id, client_secret, redirect_url and refresh token. Each of these parameters get a corresponding field.&lt;/p>
&lt;p>In the response there are five fields as well, the Access token, Token type, expiry time, Refresh token and creation time. The only fields I require are the Access Token, expiry and creation times. Each field has a corresponding field.&lt;/p>
&lt;p>Separately, I have gotten the Access Token so I can enter these details into the designer directly.&lt;/p>
&lt;p>&lt;img src="file:///C:/Users/CAITRI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image006.jpg" alt="img">&lt;/p>
&lt;p>Create a button called &lt;strong>Refresh&lt;/strong>. Within this button there are three buttons.&lt;/p>
&lt;p>\1. &lt;strong>Set Form Field&lt;/strong> - Clear the Access Token field.&lt;/p>
&lt;p>&lt;strong>2.&lt;/strong> &lt;strong>Create Item –&lt;/strong> This rule will invoke the REST Service and map the response back to the process.&lt;/p>
&lt;p>&lt;strong>a.&lt;/strong> Click on the Select data source button. In the following dialog box select the &lt;strong>Rest Service&lt;/strong> and select the &lt;strong>Get/Refresh Auth Token REST Method.&lt;/strong>&lt;/p>
&lt;p>&lt;img src="file:///C:/Users/CAITRI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image008.jpg" alt="img">&lt;/p>
&lt;p>b. In the Input mapping, map the values from the process into the request body. The left-hand column, Form field or text, represents the fields within the process or hard coded values. The right-hand column, Data source field, represent the values within the &lt;strong>REST Service,&lt;/strong> be it the request header, request body, response header or response body**.** In addition to the parameters defined with the &lt;strong>REST Service&lt;/strong> the &lt;strong>urlPath&lt;/strong> can be defined in the process and passed into the datasource.&lt;/p>
&lt;p>&lt;img src="file:///C:/Users/CAITRI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image010.jpg" alt="img">&lt;/p>
&lt;p>&lt;img src="file:///C:/Users/CAITRI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image011.png" alt="img">&lt;/p>
&lt;p>c. The On Success Mapping section is used to map the result from the API call back into the Process. The left-hand column, Form field or text, represents the fields within the process or hard coded values. The right-hand column, Data source field, represent the values within the &lt;strong>REST Service,&lt;/strong> be it the request header, request body, response header or response body&lt;/p>
&lt;p>&lt;img src="file:///C:/Users/CAITRI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image013.jpg" alt="img">&lt;/p>
&lt;p>\3. The last rule must be a save rule.&lt;/p>
&lt;p>Finally; run the Process in preview mode, ensure the details you want to pass into the &lt;strong>REST Service&lt;/strong> are correct and save the process. Take note of the Process ID as this will be needed for setting up the Scheduled Task&lt;/p>
&lt;p>&lt;strong>Create the Scheduled Task&lt;/strong>&lt;/p>
&lt;p>The final step will be to create the scheduled task that will run before the refresh token expires. Navigate to the &lt;strong>Scheduled tasks&lt;/strong> within the &lt;strong>Administration&lt;/strong> section in the site. Click on the &lt;strong>Schedule a task&lt;/strong> button and fill in the dialog box.&lt;/p>
&lt;p>&lt;img src="file:///C:/Users/CAITRI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image015.jpg" alt="img">&lt;/p>
&lt;p>\1. Enter a name for the task in the &lt;strong>Task Name&lt;/strong> field.&lt;/p>
&lt;p>\2. Under &lt;strong>Schedule&lt;/strong> select the &lt;strong>Minutes&lt;/strong> option. In the &lt;strong>Every&lt;/strong> &lt;strong>Minutes&lt;/strong> field enter a numerical value. For example, if the Access Token expires every 60 minutes, enter 55, meaning the schedule will run every 55 minutes.&lt;/p>
&lt;p>\3. Leave the &lt;strong>Expire&lt;/strong> checkbox blank as this schedule should never stop.&lt;/p>
&lt;p>\4. Under &lt;strong>Process Design&lt;/strong> select the name of the process that you created in the step above. This will expose a new field called &lt;strong>Select the field or rule to trigger on schedule.&lt;/strong>&lt;/p>
&lt;p>\5. In &lt;strong>Process ID&lt;/strong> enter the ID of the process that you created in preview mode.&lt;/p>
&lt;p>\6. In &lt;strong>Select the field or rule to trigger on schedule&lt;/strong> select the &lt;strong>Refresh&lt;/strong> button**.**&lt;/p>
&lt;p>&lt;img src="file:///C:/Users/CAITRI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image017.jpg" alt="img">&lt;/p>
&lt;p>\7. Click &lt;strong>OK&lt;/strong> to save.&lt;/p>
&lt;p>The Schedule is now set up and will refresh the access token as frequently as the time entered in the minutes field.&lt;/p>
&lt;p>&lt;strong>Next Steps&lt;/strong>&lt;/p>
&lt;p>The Schedule is now set up and will refresh the access token as frequently as the time entered in the minutes field. This will run indefinitely until a user chooses to delete the schedule.&lt;/p>
&lt;p>The datasource is now available to used and the Access Token is being kept current. The Access Token can be pulled into different &lt;strong>Processes&lt;/strong> and used to send further &lt;strong>REST APIs&lt;/strong>. Check out the below articles on how to build processes and how to add more &lt;strong>REST Methods&lt;/strong> to the datasource.&lt;/p>
&lt;p>&lt;a href="https://docs.kianda.com/docs/platform/administration/designer/">https://docs.kianda.com/docs/platform/administration/designer/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://docs.kianda.com/docs/platform/connectors/webservices/">https://docs.kianda.com/docs/platform/connectors/webservices/&lt;/a>&lt;/p></description></item></channel></rss>